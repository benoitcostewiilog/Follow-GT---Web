<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('WrkArrivage', 'doctrine');

/**
 * BaseWrkArrivage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_arrivage
 * @property integer $id_fournisseur
 * @property integer $id_transporteur
 * @property integer $id_chauffeur
 * @property string $lettre_voiture
 * @property integer $nb_colis
 * @property integer $nb_palette
 * @property string $immatriculation
 * @property string $rep_signature
 * @property int $id_nature
 * @property string $br_sap
 * @property string $statut
 * @property string $commentaire
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property RefTransporteur $RefTransporteur
 * @property RefChauffeur $RefChauffeur
 * @property RefFournisseur $RefFournisseur
 * @property Doctrine_Collection $WrkArrivageProduit
 * @property RefNature $RefNature
 * 
 * @method integer             getIdArrivage()         Returns the current record's "id_arrivage" value
 * @method integer             getIdFournisseur()      Returns the current record's "id_fournisseur" value
 * @method integer             getIdTransporteur()     Returns the current record's "id_transporteur" value
 * @method integer             getIdChauffeur()        Returns the current record's "id_chauffeur" value
 * @method string              getLettreVoiture()      Returns the current record's "lettre_voiture" value
 * @method integer             getNbColis()            Returns the current record's "nb_colis" value
 * @method integer             getNbPalette()          Returns the current record's "nb_palette" value
 * @method string              getImmatriculation()    Returns the current record's "immatriculation" value
 * @method string              getRepSignature()       Returns the current record's "rep_signature" value
 * @method int                 getIdNature()           Returns the current record's "id_nature" value
 * @method string              getBrSap()              Returns the current record's "br_sap" value
 * @method string              getStatut()             Returns the current record's "statut" value
 * @method string              getCommentaire()        Returns the current record's "commentaire" value
 * @method timestamp           getCreatedAt()          Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()          Returns the current record's "updated_at" value
 * @method RefTransporteur     getRefTransporteur()    Returns the current record's "RefTransporteur" value
 * @method RefChauffeur        getRefChauffeur()       Returns the current record's "RefChauffeur" value
 * @method RefFournisseur      getRefFournisseur()     Returns the current record's "RefFournisseur" value
 * @method Doctrine_Collection getWrkArrivageProduit() Returns the current record's "WrkArrivageProduit" collection
 * @method RefNature           getRefNature()          Returns the current record's "RefNature" value
 * @method WrkArrivage         setIdArrivage()         Sets the current record's "id_arrivage" value
 * @method WrkArrivage         setIdFournisseur()      Sets the current record's "id_fournisseur" value
 * @method WrkArrivage         setIdTransporteur()     Sets the current record's "id_transporteur" value
 * @method WrkArrivage         setIdChauffeur()        Sets the current record's "id_chauffeur" value
 * @method WrkArrivage         setLettreVoiture()      Sets the current record's "lettre_voiture" value
 * @method WrkArrivage         setNbColis()            Sets the current record's "nb_colis" value
 * @method WrkArrivage         setNbPalette()          Sets the current record's "nb_palette" value
 * @method WrkArrivage         setImmatriculation()    Sets the current record's "immatriculation" value
 * @method WrkArrivage         setRepSignature()       Sets the current record's "rep_signature" value
 * @method WrkArrivage         setIdNature()           Sets the current record's "id_nature" value
 * @method WrkArrivage         setBrSap()              Sets the current record's "br_sap" value
 * @method WrkArrivage         setStatut()             Sets the current record's "statut" value
 * @method WrkArrivage         setCommentaire()        Sets the current record's "commentaire" value
 * @method WrkArrivage         setCreatedAt()          Sets the current record's "created_at" value
 * @method WrkArrivage         setUpdatedAt()          Sets the current record's "updated_at" value
 * @method WrkArrivage         setRefTransporteur()    Sets the current record's "RefTransporteur" value
 * @method WrkArrivage         setRefChauffeur()       Sets the current record's "RefChauffeur" value
 * @method WrkArrivage         setRefFournisseur()     Sets the current record's "RefFournisseur" value
 * @method WrkArrivage         setWrkArrivageProduit() Sets the current record's "WrkArrivageProduit" collection
 * @method WrkArrivage         setRefNature()          Sets the current record's "RefNature" value
 * 
 * @package    MobileStockV3
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWrkArrivage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('wrk_arrivage');
        $this->hasColumn('id_arrivage', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_fournisseur', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_transporteur', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_chauffeur', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 11,
             ));
        $this->hasColumn('lettre_voiture', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('nb_colis', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nb_palette', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('immatriculation', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('rep_signature', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('id_nature', 'int', 2, array(
             'type' => 'int',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('br_sap', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('statut', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('commentaire', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('RefTransporteur', array(
             'local' => 'id_transporteur',
             'foreign' => 'id_transporteur'));

        $this->hasOne('RefChauffeur', array(
             'local' => 'id_chauffeur',
             'foreign' => 'id_chauffeur'));

        $this->hasOne('RefFournisseur', array(
             'local' => 'id_fournisseur',
             'foreign' => 'id_fournisseur'));

        $this->hasMany('WrkArrivageProduit', array(
             'local' => 'id_arrivage',
             'foreign' => 'id_arrivage'));

        $this->hasOne('RefNature', array(
             'local' => 'id_nature',
             'foreign' => 'id_nature'));
    }
}